import discord from "discord.js";
import { project, client, client_commands } from "../main.js";
import haosj, { ClassData, Subject } from "haosj";
import { Config } from "./config.js";
import { serversConfig } from "./serversconfig.js";
import fs from "fs";

export const weekday = ["‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå", "‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå", "‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£", "‡∏û‡∏∏‡∏ò", "‡∏û‡∏§‡∏©‡∏´‡∏±‡∏™‡∏ö‡∏î‡∏µ", "‡∏®‡∏∏‡∏Å‡∏£‡πå", "‡πÄ‡∏™‡∏≤‡∏£‡πå"];

/**
 * @param {ClassData} classData
 * @param {discord.TextBasedChannels} channel 
 * @param {Subject} subject 
 */
export async function sendSubjectMessage(channel, subject, classData = null, title = "üìö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏¥‡∏ä‡∏≤") {
    return await channel.send({ embeds: [getSubjectEmbed(subject, classData, title)] });
}

/**
 * 
 * @param {Subject} subject 
 * @param {String} title 
 * @param {ClassData} classData
 * @returns {discord.MessageEmbed}
 */
export function getSubjectEmbed(subject, classData = null, title = "üìö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏¥‡∏ä‡∏≤") {
    let classroom_url = null;
    let meet_url = null;
    let meet_id = null;
    classroom_url = subject.getClassroomUrl();
    meet_url = subject.getMeetUrl();
    meet_id = meet_url ? subject.getMeetUrl().replace(/[a-z.\/:]+\//, "") : null;
    let embed = new discord.MessageEmbed()
        .setColor(Config.getColor())
        .setTitle(title)
        .setFooter(`HaoDiscordBot v.${project.version} by ${project.author}. license : ${project.license}`);
    if (classData != null) embed.setDescription(`‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á ${classData.getClassName()} ‚Ä¢ ID : ${classData.getClassId()}üçïüéÉ`);
    embed.addField(`‚ö°‡∏Ñ‡∏≤‡∏ö‡∏ó‡∏µ‡πà : ${subject.getLocalePeriod()}`, `- ${getSplashText()}`, true);
    embed.addField(`üìù‡∏ß‡∏¥‡∏ä‡∏≤ : `, `- ${subject.getLocaleName()}`, true);
    embed.addField(`üë©‚Äçüè´‡∏ú‡∏π‡πâ‡∏™‡∏≠‡∏ô : `, subject.getLocaleTeacherName() ? `- ${subject.getLocaleTeacherName()}` : `- ‚ùå‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏∞‡∏ö‡∏∏‡πÑ‡∏î‡πâ`, false);
    embed.addField(`‚åõ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ï‡∏≠‡∏ô : `, `- ${subject.getLocaleTime()}‡∏ô.`, true);
    embed.addField(`üöó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà : `, subject.getRoomId() ? `- ${subject.getRoomId()}` : `- ‚ùå‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏∞‡∏ö‡∏∏‡πÑ‡∏î‡πâ`, true);
    embed.addField(`üè†Classroom : `, classroom_url ? `- ${classroom_url}` : `- ‚ùå‡πÑ‡∏°‡πà‡∏°‡∏µ classroom url.`, false);
    embed.addField("üìªMeet : ", meet_url ? `- ${meet_url}` : `- ‚ùå‡πÑ‡∏°‡πà‡∏°‡∏µ meet url.`, false);
    if (meet_id) {
        embed.addField("üîë‡∏£‡∏´‡∏±‡∏™‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏° : ", `- ${meet_id}`, true);
        embed.setThumbnail("https://fonts.gstatic.com/s/i/productlogos/meet_2020q4/v1/web-96dp/logo_meet_2020q4_color_2x_web_96dp.png");
    }
    return embed;
}
/**
 * ‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ null ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ.
 * @param {String} arg ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏™‡πà‡∏°‡∏≤ ‡∏à‡∏∞‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏Ñ‡∏≤‡∏ö‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô + 1.
 * @return {Number}
 * @throws {Error}
 */
export function getPariodByArg(arg, currentPariod) {
    let out = arg ? Number.parseInt(arg) : currentPariod + 1;
    if (Number.isNaN(out)) throw new Error("‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç : " + arg);
    return out;
}

/**
 * @param {{command:string,description:string}[]} fields
 * @param {String} title 
 * @returns {discord.MessageEmbed}
 */
export function getAbout(title = "‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö ü§ñ" + client.user.username, fields) {
    let prefix = Config.getPrefix();
    /**
     * 
     * @param {string} name 
     * @param {string} value 
     */
    let f = (name, value, inline = false) => { return { name: `${prefix + name}`, value: value, inline: inline } };
    let embed = new discord.MessageEmbed()
        .setColor(Config.getColor())
        .setTitle(title)
        .setImage(client.user.avatarURL())
        .setDescription(`bot ‡∏ô‡∏µ‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏≠‡∏Å‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡∏≠‡∏á‡∏ß‡∏¥‡∏ä‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÜ‡πÑ‡∏î‡πâ‡∏ú‡πà‡∏≤‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á ‡πÅ‡∏•‡∏∞‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡∏¥‡∏ä‡∏≤‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÑ‡∏î‡πâ`)
        .setFooter(`${project.name} v.${project.version} by ${project.author}`)
        .addFields(
            f('gs', '‡πÅ‡∏™‡∏î‡∏á‡∏ß‡∏¥‡∏ä‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô.üìñ'),
            f('gs <‡∏Ñ‡∏≤‡∏ö>', '‡πÅ‡∏™‡∏î‡∏á‡∏ß‡∏¥‡∏ä‡∏≤‡πÉ‡∏ô‡∏Ñ‡∏≤‡∏ö‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î.üìñ'),
            f('gs <‡∏ß‡∏±‡∏ô> <‡∏Ñ‡∏≤‡∏ö>', '‡πÅ‡∏™‡∏î‡∏á‡∏ß‡∏¥‡∏ä‡∏≤‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≤‡∏ö‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î. <‡∏ß‡∏±‡∏ô> ‡∏Ñ‡∏∑‡∏≠‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 0-6 ‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå(0),‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå(1),...,‡πÄ‡∏™‡∏≤‡∏£‡πå(6)üìñ'),
            f('gns', '‡πÅ‡∏™‡∏î‡∏á‡∏ß‡∏¥‡∏ä‡∏≤‡∏ñ‡∏±‡∏î‡πÑ‡∏õ.üìñ'),
            f('gls', '‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô.üìñ'),
            f('gls <‡∏ß‡∏±‡∏ô>', '‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î. <‡∏ß‡∏±‡∏ô> ‡∏Ñ‡∏∑‡∏≠‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 0-6 ‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå(0),‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå(1),...,‡πÄ‡∏™‡∏≤‡∏£‡πå(6)üìñ'),
            f('gas', '‡πÅ‡∏™‡∏î‡∏á‡∏ß‡∏¥‡∏ä‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ôüìñ'),
            f('edit <‡∏ß‡∏±‡∏ô> <‡∏Ñ‡∏≤‡∏ö>', '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ß‡∏¥‡∏ä‡∏≤‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≤‡∏ö‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î <‡∏ß‡∏±‡∏ô> ‡∏Ñ‡∏∑‡∏≠‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 0-6 ‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå(0),‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå(1),...,‡πÄ‡∏™‡∏≤‡∏£‡πå(6)‚öô'),
            f('about', '‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâüÜò'),
            f('help', `‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ö ${prefix}aboutüÜò`),
            f('seturl <Url>', '‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‚öô'),
            f('wand', client_commands.get('wand').description + 'ü™ì'),
            f('toggleinterval', client_commands.get('toggleinterval').description + '‚öô'),
            f('intervals toggle', client_commands.get('toggleinterval').description + '‚öô'),
            f('intervals add <id ‡∏´‡πâ‡∏≠‡∏á>', '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‚öô'),
            f('intervals remove <id ‡∏´‡πâ‡∏≠‡∏á>', '‡∏•‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‚öô'),
            f('intervals before <‡πÄ‡∏ß‡∏•‡∏≤>', '‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏≤‡∏ö‡∏´‡∏ô‡πâ‡∏≤‚öô'),
            f('intervals get', '‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‚öô'),
            f('intervals reset', 'reset ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‚öô'),
            f('setdata', '‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‚öô'),
            f('setdata -f', '‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏ö‡∏°‡∏≤‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°'),
            f('getdata', '‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‚öô'),
            f('ps', '‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏ö‡∏°‡∏≤‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏π‡∏î‡∏Ñ‡∏∏‡∏¢‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡∏™‡∏±‡πà‡∏á‡∏≠‡∏¢‡∏π‡πà'),
            f('start-server <password>', '‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ã‡∏¥‡∏ü‡∏°‡∏≤‡∏¢‡∏Ñ‡∏£‡∏≤‡∏ü‡πÅ‡∏ö‡∏ö public (‡∏ó‡∏±‡πà‡∏ß‡πÇ‡∏•‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏î‡πâ)')
        )
        .setTimestamp(new Date());
    return embed;
};

/**
 * 
 * @returns {String} ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏°.
 */
export function getSplashText() {
    let splashTextArr = Config.getSplashText();
    return splashTextArr[getRndInteger(0, splashTextArr.length - 1)];
}

/**
 * 
 * @param {Number} min 
 * @param {Number} max 
 * @returns {Number} ‡πÄ‡∏•‡∏Ç‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏ï‡πá‡∏°‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏™‡∏∏‡πà‡∏°‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î.
 */
export function getRndInteger(min, max) {
    return Math.floor(Math.random() * (max - min + 1)) + min;
}

/**
 * ‡∏£‡∏±‡∏ö id ‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏à‡∏∞ throw error ‡∏≠‡∏≠‡∏Å‡∏°‡∏≤.
 * @param {string} id 
 * @returns {ClassData}
 */
export function getClass(id) {
    let c = haosj.getClass(id);
    if (!c) throw new Error("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô.");
    c.update();
    return c;
}

/**
 * @param {string} id 
 * @param {import("haosj").RawClassData} new_data 
 */
export function updateData(id, new_data) {
    let c = haosj.getClass(id);
    let sc = serversConfig.get(id);
    sc.config.Settings.DataUrl = null; sc.save();
    if (!haosj.isReadable(new_data)) throw new Error('‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
    fs.writeFileSync(`./datas/${id}.json`, JSON.stringify(new_data, null, 4));
    c.update(false, new_data);
    sc.manageInterval(true);
}