import cs from 'console-stamp';
cs(console);
import { Message, MessageEmbed } from "discord.js";
import haosj from 'haosj';
import { Config } from "../utils/config.js";
import { serversConfig } from "../utils/serversconfig.js";
import { manageData } from "../utils/ufunction.js";
import { yesno_buttons } from './setdata.js';

export const name = "seturl";
export const description = "‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤ server ‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡∏ß‡∏¥‡∏ä‡∏≤‡∏≠‡∏∞‡πÑ‡∏£";
const path = './datas';

/**
 * 
 * @param {Message} message 
 * @return {Promise<void>}
 */
export async function execute(message, args) {
    console.log(`${message.guildId} execute command seturl >>>`);
    let old_url;
    let old_classData;
    try {
        !serversConfig.isExist(message.guildId) && serversConfig.create(message.guildId);
        if (!args[0]) throw new Error(`‡πÑ‡∏°‡πà‡∏û‡∏ö url. ‡πÉ‡∏ä‡πâ ${Config.getPrefix()}${name} <URL>`);
        old_url = serversConfig.get(message.guildId).config.Settings.DataUrl;
        old_classData = haosj.getClass(message.guildId);
        if (old_classData != null && old_url != args[0]) {
            await message.channel.send({
                embeds: [new MessageEmbed()
                    .setTitle('üõë‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô')
                    .setDescription('‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏¥‡∏ä‡∏≤‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß')
                    .setColor(Config.getColor())],
                files: [`datas/${message.guildId}.json`]
            });
            if (!await yesno_buttons(message, '‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏ï‡πà‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‚ùì', undefined, '‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠', '‡πÑ‡∏°‡πà‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠')) return;
        }
        serversConfig.get(message.guildId).setUrlData(args[0]);
        await message.channel.send({ content: "‚öô‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô " + args[0] });
        await message.channel.send({ content: "‚öô‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•..." });
        let response = await manageData(path, message.guildId, true);
        serversConfig.get(message.guildId).manageInterval(true);
        await message.channel.send({ content: response });
    } catch (e) {
        old_url && serversConfig.get(message.guildId).setUrlData(old_url);
        old_classData && haosj.addClass(message.guildId, old_classData);
        await message.channel.send({ content: "‚ùå‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î : " + e });
    }
}